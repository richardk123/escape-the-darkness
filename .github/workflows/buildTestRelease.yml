name: Build Test Release

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch (or change to your main branch name)
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest # Use Ubuntu as the base runner
    name: Build and Test

    strategy:
      matrix:
        target: [x86_64-linux, x86_64-windows, x86_64-macos, aarch64-macos]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v1
        with:
          mirror: "https://pkg.machengine.org/zig"
          version: 0.14.0-dev.2577+271452d22

      - name: Build and Test
        run: |
          export ZIG_TARGET="${{ matrix.target }}"
          zig build test --verbose  #Added verbose to show build progress
          zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSmall --summary all

      - name: Archive Artifacts (Optional)
        uses: actions/upload-artifact@v4
        if: always() #Always upload artifacts even if build failed
        with:
          name: ${{ matrix.target }}-artifacts
          path: zig-out/bin/

  #Optional job to upload releases to github
  release:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Download builds for
      - name: Download Artifacts # Windows
        uses: actions/download-artifact@v4
        with:
          name: x86_64-windows-artifacts

      - name: Download Artifacts # Linux
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-artifacts

      - name: Download Artifacts # OSX x86
        uses: actions/download-artifact@v4
        with:
          name: x86_64-macos-artifacts

      - name: Download Artifacts # OSX aarch64
        uses: actions/download-artifact@v4
        with:
          name: aarch64-macos-artifacts

      # # Create release
      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: Release for various platforms.
      #     draft: false
      #     prerelease: false

      # Upload builds
      - name: Upload Release Windows
        uses: actions/upload-artifact@v4
        with:
          name: release_windows
          path: ./x86_64-windows-artifacts

      - name: Upload Release Linux
        uses: actions/upload-artifact@v4
        with:
          name: release_linux
          path: ./x86_64-linux-artifacts

      - name: Upload Release MacOS x86_64
        uses: actions/upload-artifact@v4
        with:
          name: release_macos_x86_64
          path: ./x86_64-macos-artifacts

      - name: Upload Release MacOS aarch64
        uses: actions/upload-artifact@v4
        with:
          name: release_macos_aarch64
          path: ./aarch64-macos-artifacts
